---
title: "Influenza A H7N9 in China, 2013"
format: dashboard
theme: lux
---

```{r}
# Load packages 
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, outbreaks, bslib, bsicons, shiny, 
               rgeoboundaries, plotly, htmltools, reactable, dplyr, htmltools)


# view data
# head(outbreaks::fluH7N9_china_2013)


```

```{r}
total_cases <- nrow(fluH7N9_china_2013)




total_hospitalizations <- sum(!is.na(fluH7N9_china_2013$date_of_hospitalisation))



total_deaths <- fluH7N9_china_2013 %>%
  filter(outcome == "Death") %>%
  summarise(count = n())
```


```{r}
# Group the data by province and calculate the number of cases

fluH7N9_cases_by_province <- fluH7N9_china_2013 %>%
  group_by(province) %>%  
  summarise(number_of_cases = n()) %>% 
  ungroup()

# Process the data and create the ggplot object
China_province_cases <- fluH7N9_cases_by_province %>%
  arrange(desc(number_of_cases)) %>%
  mutate(tooltip_label = paste(province, number_of_cases, sep = ": ")) %>% # Create a tooltip label
  ggplot(aes(
    y = reorder(province, number_of_cases), 
    x = number_of_cases, 
    text = tooltip_label  # Tooltip information
  )) +
  geom_col(fill = "#3f71ab") +
  labs(y = " ", x = "Number of cases") +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "white", color = NA),
    legend.position = "none"
  )

# Convert ggplot to a dynamic plotly chart
dynamic_chart <- ggplotly(China_province_cases, tooltip = "text")
```


```{r results='hide', message=FALSE, warning = FALSE}
pacman::p_load(outbreaks, rgeoboundaries, plotly)

### MAP OF CASES PER PROVINCE
province_summary <- fluH7N9_china_2013 %>% 
  group_by(province) %>% 
  summarise(total_cases = n()) 

china_map <- rgeoboundaries::gb_adm1("china")

# Check the keys to see if join will be successful
setdiff(province_summary$province, china_map$shapeName)
setdiff(china_map$shapeName, province_summary$province)
# Some work to be done to harmonize these

china_map <- china_map %>%
  # Remove the strings Province, Municipality and Autonomous Region 
  # to allow matching
  mutate(province = str_trim(
    str_remove(shapeName, "Province|Municipality|Autonomous Region")
  ))

# Check if join will work fine
setdiff(province_summary$province, china_map$province)

# Fix Guangdong, which based on a quick Google is actually Guangzhou
china_map <- china_map %>% 
  mutate(province = if_else(province == "Guangzhou", "Guangdong", province)) 
  
# Check again
setdiff(province_summary$province, china_map$province)

# Now join
china_map_joined <- 
  left_join(china_map, province_summary, by = "province") %>% 
  # Create tooltip label 
  mutate(tooltip_label = paste0(province, ": ", total_cases))

china_map_plot <- ggplot(china_map_joined) +
  geom_sf(aes(fill = total_cases, text = tooltip_label)) + 
  theme_void() +
  labs(fill = "Number of Cases") + 
  theme(legend.position = "none")

china_map_plot_ggplotly <- 
  ggplotly(china_map_plot, tooltip = "text")
```


# HOME 

## Row 1 {height=25%}

```{r}
value_box(
  title = "Total Number of Cases", 
  value = total_cases,
  showcase = bsicons::bs_icon("virus"),
  theme = value_box_theme(bg = "#518fd6"),
  p(paste0("(", total_cases, ")"))
)
```

```{r}
value_box(
  title = "Total Hospitalizations",
  value = total_hospitalizations,
  showcase = bsicons::bs_icon("hospital"),
  theme = value_box_theme(bg = "#214773"),
  p(paste0("(", total_hospitalizations, ")"))
)
```

```{r}
value_box(
  title = "Total Deaths",
  value = total_deaths,
  showcase = bsicons::bs_icon("file-medical"),
  theme = value_box_theme(bg = "#3f71ab")
)
```

## Row 2 {height=75%}

### {width=30%}

```{r title= "Number of Cases by Province"}
dynamic_chart
```

### {width=70%} 

```{r title="Map of Provinces by Number of Cases"}
china_map_plot_ggplotly
```

# DOWNLOAD DATA

```{r}
htmltools::browsable(
  tagList(
    reactable(fluH7N9_china_2013, 
              elementId = "China-2013-table", 
              searchable = T, 
              filterable = T), 
    
tags$button("Download as CSV", 
            onclick = "Reactable.downloadDataCSV('China-2013-table')")
  )
)
```


# ABOUT

This dashboard analyzes data on the 2013 influenza A H7N9 outbreak in China.

Key points:

There were 136 total reported cases
62 cases were hospitalized
32 deaths occurred
The most affected provinces were Zhejiang, Shanghai and Jiangsu
The data is sourced from a Dryad dataset by Kucharski et al (2014) who collated case details from various reports. This dashboard provides an interactive visualization of the outbreakâ€™s geographical distribution and key statistics.

Reference: Kucharski, A., Mills, H., Pinsent, A., Fraser, C., Kerkhove, M. V., Donnelly, C. A., & Riley, S. (2014). Distinguishing between reservoir exposure and human-to-human transmission for emerging pathogens using case onset data. PLOS Currents Outbreaks, 1. https://doi.org/10.1371/currents.outbreaks.e1473d9bfc99d080ca242139a06c455f
